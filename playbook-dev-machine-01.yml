---
- hosts: all
  become: yes
  tasks:
    - name: Clone dotfiles
      become_user: bnagi #will need to figure out how to generalize this one day
      ansible.builtin.git:
        repo: 'git@github.com:nagibyro/dotfiles.git'
        dest: '~/dotfiles'
        key_file: '~/.ssh/id_ed25519'

    - name: Install Dev Packages
      ansible.builtin.dnf:
        name:
          - '@Development tools'
          - '@Development Libraries'
          - gcc-c++
          - git
          - powerline-fonts
          - fd-find
          - ripgrep
          - nodejs
          - neovim
        update_cache: yes
        state: latest

    - name: Install Auto Updates
      ansible.builtin.dnf:
        name:
          - dnf-automatic
          - yum-utils
        state: latest

    - name: Add Auto updates config
      ansible.builtin.copy:
        src: ./files/dnf-automatic.conf
        dest: /etc/dnf/automatic.conf
      notify:
        - enable dnf automatic
        - restart dnf automatic

    - name: Enable starship copr repo
      community.general.copr:
        name: atim/starship
        state: enabled

    - name: Install Starship Cli
      ansible.builtin.dnf:
        name: starship

    - name: Setup Bash to use Starship cli
      become_user: bnagi
      ansible.builtin.copy:
        src: ./files/add-starship
        dest: ~/.bashrc.d/

    - name: Install Qemu Guest Package
      ansible.builtin.dnf:
        name:
          - qemu-guest-agent
        update_cache: yes
        state: latest
      when: ansible_system_vendor == 'QEMU'
      notify:
        - enable Qemu Agent
        - restart Qemu Agent

    - name: Clone pyenv
      become_user: bnagi #will need to figure out how to generalize this one day
      ansible.builtin.git:
        repo: 'git@github.com:pyenv/pyenv.git'
        dest: '~/opt/pyenv'
        version: v2.3.12
        depth: 1
        key_file: '~/.ssh/id_ed25519'

    - name: Compile pyenv bash extension
      become_user: bnagi
      ansible.builtin.shell:
        cmd: |
          src/configure && make -C src
        chdir: ~/opt/pyenv

    - name: Add pyenv to path
      become_user: bnagi
      ansible.builtin.copy:
        src: ./files/add-pyenv-path
        dest: ~/.bashrc.d/

    # - name: Install Dotfiles
    #   ansible.builtin.git:
    #     repo: git@github.com:nagibyro/dotfiles.git
    #     dest: "{{ ansible_env.HOME }}/dotfiles"
    #     ssh_opts: "-o StrictHostKeyChecking=no"
    #   environment:
    #     GIT_TERMINAL_PROMPT: 0
    #
    - name: Import 1Password yum public key
      ansible.builtin.rpm_key:
        state: present
        key: https://downloads.1password.com/linux/keys/1password.asc

    - name: Add 1Password repo
      ansible.builtin.yum_repository:
        name: 1password
        description: 1password Stable Channel
        baseurl: https://downloads.1password.com/linux/rpm/stable/$basearch
        enabled: true
        gpgcheck: true
        gpgkey: https://downloads.1password.com/linux/keys/1password.asc

    - name: Install 1Password cli
      ansible.builtin.dnf:
        name:
          - 1password-cli
        update_cache: yes
        state: latest

    - name: Add Docker repo
      ansible.builtin.yum_repository:
        name: docker-ce-stable
        description: Docker CE Stable - $basearch
        baseurl: https://download.docker.com/linux/fedora/$releasever/$basearch/stable
        enabled: true
        gpgcheck: true
        gpgkey: https://download.docker.com/linux/fedora/gpg

    - name: Install Docker
      ansible.builtin.dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        update_cache: yes
        state: latest
      notify:
        - enable Docker
        - restart Docker

    - name: Add docker daemon config
      ansible.builtin.copy:
        src: ./files/docker-daemon-config.json
        dest: /etc/docker/daemon.json
      notify:
        - restart Docker

    - name: Add bnagi user to docker group
      ansible.builtin.user:
        name: bnagi
        groups: docker
        append: yes

    - name: Check if cargo is installed
      become_user: bnagi
      shell: command -v cargo
      register: cargo_exists
      ignore_errors: yes

    - name: Download Installer
      become_user: bnagi
      when: cargo_exists is failed
      get_url:
        url: https://sh.rustup.rs
        dest: /tmp/sh.rustup.rs
        mode: '0755'
        force: yes
      tags:
        - rust

    - name: install rust/cargo
      become_user: bnagi
      when: cargo_exists is failed
      shell: /tmp/sh.rustup.rs -y
      tags:
        - rust

  handlers:
    - name: restart Qemu Agent
      ansible.builtin.service:
        name: qemu-guest-agent
        state: restarted

    - name: enable Qemu Agent
      ansible.builtin.service:
        name: qemu-guest-agent
        enabled: true

    - name: restart Docker
      ansible.builtin.service:
        name: docker
        state: restarted

    - name: enable Docker
      ansible.builtin.service:
        name: docker
        enabled: true
          
    - name: enable dnf automatic
      ansible.builtin.service:
        name: dnf-automatic-install.timer
        enabled: true

    - name: restart dnf automatic
      ansible.builtin.service:
        name: dnf-automatic-install.timer
        state: restarted
